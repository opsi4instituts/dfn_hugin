Set $SearchPattern$ = $ProductName$
; Parameter: $SearchPattern$ Suchbegriff in Registry
Sub_search_registry64_uninstall_keys
; Rückgabewert: $ResultList$ gefundene Einträge

Switch count ($ResultList$)
	Case "0"
		comment "No installations of " + $SearchPattern$ + " found in $RegPathUninstall$. Nothing to do"
	EndCase
	Case "1"
		Message "Uninstalling " + $ProductName$ + " ..."
		Set $RegId$ = takeString(0, $ResultList$)
		
		; 'OPSI' im DisplayName der Registry ist der entscheidende Punkt, ob eine Installatin via 'files_install' oder MSI vorgefunden wird
		if not(contains(GetRegistryStringValue64("[" + $RegPathUninstall$ + "\" + $RegId$ + "] DisplayName"), "OPSI"))
			Winbatch_uninstall_msi
			Sub_check_exitcode
		else
			comment "Found a version which was installed by just copying the files (before version 2016.2.0)
			Set $InstallDir$ = GetRegistryStringValue64("[" + $RegPathUninstall$ + "\" + $RegId$ + "] InstallLocation")
			Files_uninstall
			Registry_uninstall /64Bit
			LinkFolder_uninstall_programs
		endif

		if $DesktopLink$ = "true"
			comment "Delete common desktop link"
			Linkfolder_delete_desktoplink	
		endif

		comment "include custom post deinstall file"
		set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
		if not ($CustomPostDeinstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
			endif
		endif
	EndCase
	DefaultCase
		logError "Found more than one installation! This case is not intended yet in this script! Stop now."
		isFatalError
	EndCase
EndSwitch                    

[Winbatch_uninstall_msi]
msiexec /x $RegId$ $SilentOption$ REBOOT=ReallySuppress

[Files_uninstall]
delete -sf $InstallDir$

[Linkfolder_delete_desktoplink]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element $ProductName$
	
[LinkFolder_uninstall_programs]
set_basefolder common_startmenu
set_subfolder "Programs"
delete_element $ProductName$
	
[Registry_uninstall]
deletekey [$RegPathUninstall$\$ProductId$]

Message "Searching installation of " + $ProductName$ + " 64 Bit..."

; Ergebnis ist StringList (mehrere Einträge möglich);
; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

Switch count ($ResultList$)
	Case "0"
		comment "No installations of " + $ProductName$ + " found in registry. Nothing to do"
	EndCase
	Case "1"
		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))	
		Set $RegDisplayName$ = takeString (2,splitString(takeString(0,$ResultList$), '|'))
		Message "Uninstalling " + $ProductName$ + " " + $RegBitScope$ + "..."

		; 'OPSI' im DisplayName ist der entscheidende Punkt, ob eine Installation via 'files_install' vorgefunden wird
		if (contains($RegDisplayName$, "OPSI"))
			comment "Found a version which was installed by OPSI just copying the files (before version 2016.2.0)
			Set $InstallDir$ = GetRegistryValue($RegId$, "InstallLocation", $RegBitScope$)
			Files_uninstall
			Registry_uninstall /64Bit
			LinkFolder_uninstall_programs
		else
			; für MSI wird nur der eigentliche Regkey (ohne Pfad) benötigt
			Set $RegId$ = takeString (-1,splitString($RegId$,"\"))
			Winbatch_uninstall_msi
			Set $ExitCode$ = getLastExitCode
			if stringToBool(isMsiExitcodeFatal($ExitCode$, "True", $ErrorString$))
				isFatalError
			endif			
		endif

		if $DesktopLink$ = "true"
			comment "Delete common desktop link"
			Linkfolder_delete_desktoplink	
		endif

		comment "include custom post deinstall file"
		set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
		if not ($CustomPostDeinstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
			endif
		endif
	EndCase
	DefaultCase
		logError "Found more than one installation! This case is not intended yet in this script! Stop now."
		isFatalError
	EndCase
EndSwitch                    

[Winbatch_uninstall_msi]
msiexec /x $RegId$ $SilentOption$ REBOOT=ReallySuppress

[Files_uninstall]
delete -sf $InstallDir$

[Linkfolder_delete_desktoplink]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element $ProductName$
	
[LinkFolder_uninstall_programs]
set_basefolder common_startmenu
set_subfolder "Programs"
delete_element $ProductName$
	
[Registry_uninstall]
deletekey [$RegId$]
